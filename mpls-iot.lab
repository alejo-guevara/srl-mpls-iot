#
# SRL MPLS IOT lab featuring SROS and VMX
#
name: mpls-iot-lab

topology:
  defaults:
    config:
      vars:
        overlay_as: 65555 # 32-bit
#----------------------------------------------------#
  kinds:
    srl:
      # Need IXR D2 or D3 for EVPN/VXLAN support
      type: ixrd2 # See https://www.nokia.com/networks/products/7250-interconnect-router/
      image: srl/netbox-agent:latest
      extras:
        srl-agents:
        - ../srl-self-organizing/auto-config-agent.yml
        - ../srl-netbox-agent/srl-netbox-agent.yml
      startup-config: configs/srl-auto.cfg.json
      # binds:

    vr-sros:
      image: vrnetlab/vr-sros:21.7.R2
      license: ~/sros/SR_OS_VSR_license.txt # now also in qcow2
      binds:
      - pysros-demo.py:/tftpboot/pysros-demo.py

    vr-vmx:
      image: vrnetlab/vr-vmx:21.1R1.11

    linux:
      image: frr-with-lldp:latest

  nodes:
  #-----------------------------------------------------#
    core1:
      kind: vr-sros
      group: mpls-core
      type: sr-1s  # sr-2s added in vrnetlab, needs different license?
      # type: "cpu=2 ram=4 max_nics=6 chassis=sr-2s slot=A card=xcm-1s mda/1=s18-100gb-qsfp28"
      # type: "cpu=2 ram=6 max_nics=8 slot=A chassis=sr-2s sfm=sfm-2s card=xcm-2s xiom/x1=iom-s-3.0t mda/x1/1=ms8-100gb-sfpdd+2-100gb-qsfp28"
      # type: "cpu=2 ram=6 max_nics=18 slot=A chassis=sr-2s sfm=sfm-2s card=xcm-2s mda/1=s18-100gb-qsfp28"
      config:
        vars:
          system_ip: 1.1.1.1
          as: 65029
  #-----------------------------------------------------#
    dcgw1:
      kind: vr-sros
      group: dc
      type: sr-1s
      config:
        vars:
          system_ip: 2.1.2.1
          as: 65030
    #-----------------------------------------------------#
    dcgw2:
      kind: vr-sros
      group: dc
      type: sr-1s
      config:
        vars:
          system_ip: 2.1.2.2
          as: 65030
    #-----------------------------------------------------#
    spine1.dc1:
      kind: srl
      group: dc
      config:
        vars:
          system_ip: 2.1.1.1
          as: 65031
    #-----------------------------------------------------#
    sros1:
      kind: vr-sros
      group: pop1
      type: sr-1s
      config:
        vars:
          system_ip: 3.1.2.1
          as: 65041
    vmx1:
      kind: vr-vmx
      group: pop2
      config:
        vars:
          system_ip: 4.1.2.1
          as: 65042

    h1: { kind: linux, group: hosts, binds: [ configs/h1/frr.conf:/etc/frr/frr.conf ] }

    flow-collector:
      kind: linux
      image: cloudflare/goflow:latest
      ports:
      - 2056:2056/udp  # Type=NetFlowLegacy
      - 6343:6343/udp  # Type=sFlow
      - 2055:2055/udp  # NetFlow/IPFIX
      # Send metrics to Prometheus default '/metrics'
      cmd: -kafka=false -metrics.addr=172.20.20.101:8080 -loglevel=debug
      mgmt_ipv4: 172.20.20.100

  links:
    # Everything connected to core
    - endpoints: ["core1:eth1", "dcgw1:eth1"]
    - endpoints: ["core1:eth2", "dcgw2:eth1"]
    - endpoints: ["core1:eth3", "sros1:eth1"]
    - endpoints: ["core1:eth4", "vmx1:eth1"]

    # SRL connected to each DCGW
    - endpoints: ["spine1.dc1:e1-1", "dcgw1:eth2"]
    - endpoints: ["spine1.dc1:e1-2", "dcgw2:eth2"]

    # A host connected to each SRL on e1-3
    - endpoints: ["spine1.dc1:e1-3", "h1:eth1"]

    # Connect to sFlow connector via spine1 e1-4
    - endpoints: ["spine1.dc1:e1-4","mgmt-net:spine1-e1-4"] # bridged to mgmt
      vars:
        port: [ethernet-1/4]
        clab_link_ip: 172.20.20.99/24
